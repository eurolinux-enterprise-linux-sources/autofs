autofs-5.1.3 - add port parameter to rpc_ping()

From: Ian Kent <raven@themaw.net>

Commit 4914be96 introduced an NFS ping probe to check availability on
fallback from bind mount failure but failed to take into account the
case where the port option had been given to avoid bind mounting.

Change rpc_ping() and __rpc_ping() to take a port parameter and don't
contact the portmapper or rpcbind if it is valid.

Signed-off-by: Ian Kent <raven@themaw.net>
---
 CHANGELOG           |    1 +
 include/rpc_subs.h  |    2 +-
 lib/rpc_subs.c      |   43 +++++++++++++++++++++++++++----------------
 modules/mount_nfs.c |    2 +-
 4 files changed, 30 insertions(+), 18 deletions(-)

--- autofs-5.0.7.orig/CHANGELOG
+++ autofs-5.0.7/CHANGELOG
@@ -304,6 +304,7 @@
 - fix update_negative_cache() map source usage.
 - mark removed cache entry negative.
 - remove some redundant rpc library code.
+- add port parameter to rpc_ping().
 
 25/07/2012 autofs-5.0.7
 =======================
--- autofs-5.0.7.orig/include/rpc_subs.h
+++ autofs-5.0.7/include/rpc_subs.h
@@ -69,7 +69,7 @@ void rpc_destroy_tcp_client(struct conn_
 int rpc_portmap_getclient(struct conn_info *, const char *, struct sockaddr *, size_t, int, unsigned int);
 int rpc_portmap_getport(struct conn_info *, struct pmap *, unsigned short *);
 int rpc_ping_proto(struct conn_info *);
-int rpc_ping(const char *, long, long, unsigned int);
+int rpc_ping(const char *, int, long, long, unsigned int);
 double elapsed(struct timeval, struct timeval);
 const char *get_addr_string(struct sockaddr *, char *, socklen_t);
 
--- autofs-5.0.7.orig/lib/rpc_subs.c
+++ autofs-5.0.7/lib/rpc_subs.c
@@ -1010,12 +1010,11 @@ int rpc_ping_proto(struct conn_info *inf
 }
 
 static int __rpc_ping(const char *host,
-		      unsigned long version, int proto,
+		      unsigned long version, int proto, int port,
 		      long seconds, long micros, unsigned int option)
 {
 	int status;
 	struct conn_info info;
-	struct pmap parms;
 
 	info.proto = proto;
 	info.host = host;
@@ -1032,32 +1031,41 @@ static int __rpc_ping(const char *host,
 
 	status = RPC_PING_FAIL;
 
-	parms.pm_prog = NFS_PROGRAM;
-	parms.pm_vers = version;
-	parms.pm_prot = info.proto;
-	parms.pm_port = 0;
-
-	status = rpc_portmap_getport(&info, &parms, &info.port);
-	if (status < 0)
-		return status;
+
+	if (port > 0)
+		info.port = port;
+	else {
+		struct pmap parms;
+
+		parms.pm_prog = NFS_PROGRAM;
+		parms.pm_vers = version;
+		parms.pm_prot = info.proto;
+		parms.pm_port = 0;
+		status = rpc_portmap_getport(&info, &parms, &info.port);
+		if (status < 0)
+			return status;
+	}
 
 	status = rpc_ping_proto(&info);
 
 	return status;
 }
 
-int rpc_ping(const char *host, long seconds, long micros, unsigned int option)
+int rpc_ping(const char *host, int port,
+	     long seconds, long micros, unsigned int option)
 {
 	unsigned long vers4 = NFS4_VERSION;
 	unsigned long vers3 = NFS3_VERSION;
 	unsigned long vers2 = NFS2_VERSION;
 	int status;
 
-	status = __rpc_ping(host, vers2, IPPROTO_UDP, seconds, micros, option);
+	status = __rpc_ping(host, vers2,
+			    IPPROTO_UDP, port, seconds, micros, option);
 	if (status > 0)
 		return RPC_PING_V2 | RPC_PING_UDP;
 
-	status = __rpc_ping(host, vers3, IPPROTO_UDP, seconds, micros, option);
+	status = __rpc_ping(host, vers3,
+			    IPPROTO_UDP, port, seconds, micros, option);
 	if (status > 0)
 		return RPC_PING_V3 | RPC_PING_UDP;
 
@@ -1067,15 +1075,18 @@ int rpc_ping(const char *host, long seco
 		return RPC_PING_V4 | RPC_PING_UDP;
 	*/
 
-	status = __rpc_ping(host, vers2, IPPROTO_TCP, seconds, micros, option);
+	status = __rpc_ping(host, vers2,
+			    IPPROTO_TCP, port, seconds, micros, option);
 	if (status > 0)
 		return RPC_PING_V2 | RPC_PING_TCP;
 
-	status = __rpc_ping(host, vers3, IPPROTO_TCP, seconds, micros, option);
+	status = __rpc_ping(host, vers3, port,
+			    IPPROTO_TCP, seconds, micros, option);
 	if (status > 0)
 		return RPC_PING_V3 | RPC_PING_TCP;
 
-	status = __rpc_ping(host, vers4, IPPROTO_TCP, seconds, micros, option);
+	status = __rpc_ping(host, vers4,
+			    IPPROTO_TCP, port, seconds, micros, option);
 	if (status > 0)
 		return RPC_PING_V4 | RPC_PING_TCP;
 
--- autofs-5.0.7.orig/modules/mount_nfs.c
+++ autofs-5.0.7/modules/mount_nfs.c
@@ -358,7 +358,7 @@ dont_probe:
 			char *host = this->name ? this->name : "localhost";
 			int ret;
 
-			ret = rpc_ping(host, 2, 0, RPC_CLOSE_DEFAULT);
+			ret = rpc_ping(host, port, 2, 0, RPC_CLOSE_DEFAULT);
 			if (ret <= 0)
 				goto next;
 		}
