autofs-5.0.8 - dont ignore null cache entries on multi mount umount

From: Ian Kent <raven@themaw.net>

When umounting the offsets of a multi-mount negative cache entries
shouldn't be ignored. Even if the mount they correspond to failed to
mount the trigger still needs to be umounted.

Not ignoring negative entries when cleaning stale multi-mount entries
isn't obviously the right thing to do but, since the multi-mount entry
should have been refreshed, there shouldn't be any valid negative entries
so they must be stale and need to go.
---
 CHANGELOG    |    1 +
 lib/mounts.c |    4 ++--
 2 files changed, 3 insertions(+), 2 deletions(-)

--- autofs-5.0.5.orig/CHANGELOG
+++ autofs-5.0.5/CHANGELOG
@@ -188,6 +188,7 @@
 - fix map source with type lookup.
 - fix fix map source with type lookup.
 - fix lookup_nss_mount() map lookup.
+- dont ignore null cache entries on multi mount umount.
 
 03/09/2009 autofs-5.0.5
 -----------------------
--- autofs-5.0.5.orig/lib/mounts.c
+++ autofs-5.0.5/lib/mounts.c
@@ -1801,7 +1801,7 @@ int umount_multi_triggers(struct autofs_
 
 		oe = cache_lookup_offset(mm_base, offset, start, &me->multi_list);
 		/* root offset is a special case */
-		if (!oe || !oe->mapent || (strlen(oe->key) - start) == 1)
+		if (!oe || (strlen(oe->key) - start) == 1)
 			continue;
 
 		/*
@@ -1923,7 +1923,7 @@ int clean_stale_multi_triggers(struct au
 
 		oe = cache_lookup_offset(mm_base, offset, start, &me->multi_list);
 		/* root offset is a special case */
-		if (!oe || !oe->mapent || (strlen(oe->key) - start) == 1)
+		if (!oe || (strlen(oe->key) - start) == 1)
 			continue;
 
 		/* Check for and umount stale subtree offsets */
