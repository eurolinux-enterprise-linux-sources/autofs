autofs-5.1.2 - add sss master map wait config option

From: Ian Kent <raven@themaw.net>

When sssd is starting up it can sometimes return "no such entry" for a
short time until it has read in the LDAP map information. This affects
reading the master map at autofs startup and results in no automount
mounts if sssd is the primary map source.

This problem should be resolved in sssd but it's a problem for the
moment so a configuration option, sss_master_map_wait, has been added
to work around it.

The internal program default is 0, don't wait but the installed
configuration sets this to 10 seconds to work around the problem.

Signed-off-by: Ian Kent <raven@themaw.net>
---
 CHANGELOG                      |    1 +
 include/defaults.h             |    3 +++
 lib/defaults.c                 |   18 ++++++++++++++++++
 man/autofs.conf.5.in           |    7 +++++++
 modules/lookup_sss.c           |    7 ++++---
 redhat/autofs.conf.default.in  |   10 ++++++++++
 samples/autofs.conf.default.in |   10 ++++++++++
 7 files changed, 53 insertions(+), 3 deletions(-)

--- autofs-5.0.5.orig/CHANGELOG
+++ autofs-5.0.5/CHANGELOG
@@ -297,6 +297,7 @@
 - add master read wait option.
 - update and add README for old autofs schema.
 - work around sss startup delay.
+- add sss master map wait config option.
 
 03/09/2009 autofs-5.0.5
 -----------------------
--- autofs-5.0.5.orig/include/defaults.h
+++ autofs-5.0.5/include/defaults.h
@@ -50,6 +50,8 @@
 
 #define DEFAULT_USE_HOSTNAME_FOR_MOUNTS	"0"
 
+#define DEFAULT_SSS_MASTER_MAP_WAIT	"0"
+
 /* Config entry flags */
 #define CONF_NONE			0x00000000
 #define CONF_ENV			0x00000001
@@ -167,6 +169,7 @@ unsigned int defaults_get_umount_wait(vo
 const char *defaults_get_auth_conf_file(void);
 unsigned int defaults_get_map_hash_table_size(void);
 unsigned int defaults_use_hostname_for_mounts(void);
+unsigned int defaults_get_sss_master_map_wait(void);
 
 unsigned int conf_amd_mount_section_exists(const char *);
 char *conf_amd_get_arch(void);
--- autofs-5.0.5.orig/lib/defaults.c
+++ autofs-5.0.5/lib/defaults.c
@@ -75,6 +75,8 @@
 
 #define NAME_USE_HOSTNAME_FOR_MOUNTS	"use_hostname_for_mounts"
 
+#define NAME_SSS_MASTER_MAP_WAIT	"sss_master_map_wait"
+
 #define NAME_AMD_ARCH				"arch"
 #define NAME_AMD_AUTO_ATTRCACHE			"auto_attrcache"
 #define NAME_AMD_AUTO_DIR			"auto_dir"
@@ -347,6 +349,11 @@ static int conf_load_autofs_defaults(voi
 	if (ret == CFG_FAIL)
 		goto error;
 
+	ret = conf_update(sec, NAME_SSS_MASTER_MAP_WAIT,
+			  DEFAULT_SSS_MASTER_MAP_WAIT, CONF_ENV);
+	if (ret == CFG_FAIL)
+		goto error;
+
 	/* LDAP_URI and SEARCH_BASE can occur multiple times */
 	while ((co = conf_lookup(sec, NAME_LDAP_URI)))
 		conf_delete(co->section, co->name);
@@ -1734,6 +1741,17 @@ unsigned int defaults_use_hostname_for_m
 
 	return res;
 }
+
+unsigned int defaults_get_sss_master_map_wait(void)
+{
+	int res;
+
+	res = conf_get_yesno(autofs_gbl_sec, NAME_SSS_MASTER_MAP_WAIT);
+	if (res < 0)
+		res = atoi(DEFAULT_SSS_MASTER_MAP_WAIT);
+
+	return res;
+}
 
 unsigned int conf_amd_mount_section_exists(const char *section)
 {
--- autofs-5.0.5.orig/man/autofs.conf.5.in
+++ autofs-5.0.5/man/autofs.conf.5.in
@@ -134,6 +134,13 @@ name resolving to one that isn't respond
 of attempts at a successful mount will correspond to the number of
 addresses the host name resolves to the order will also not correspond
 to fastest responding hosts.
+.TP
+.B sss_master_map_wait
+.br
+Set the time to wait and retry if sssd returns "no such entry" when starting
+up. When sssd is starting up it can sometimes return "no such entry" for a
+short time until it has read in the LDAP map information. Default is 0 seconds,
+don't wait.
 .SS LDAP Configuration
 .P
 Configuration settings available are:
--- autofs-5.0.5.orig/modules/lookup_sss.c
+++ autofs-5.0.5/modules/lookup_sss.c
@@ -32,8 +32,6 @@
 
 /* Half a second between retries */
 #define SETAUTOMOUNTENT_MASTER_INTERVAL	500000000
-/* Try for 10 seconds */
-#define SETAUTOMOUNTENT_MASTER_RETRIES	10 * 2
 
 #define MODPREFIX "lookup(sss): "
 
@@ -304,7 +302,10 @@ int lookup_read_master(struct master *ma
 		if (ret != ENOENT)
 			return NSS_STATUS_UNAVAIL;
 
-		retries = SETAUTOMOUNTENT_MASTER_RETRIES;
+		retries = defaults_get_sss_master_map_wait() * 2;
+		if (retries <= 0)
+			return NSS_STATUS_NOTFOUND;
+
 		ret = setautomntent_wait(logopt,
 					 ctxt, ctxt->mapname, &sss_ctxt,
 					 retries);
--- autofs-5.0.5.orig/redhat/autofs.conf.default.in
+++ autofs-5.0.5/redhat/autofs.conf.default.in
@@ -158,6 +158,16 @@ mount_nfs_default_protocol = 4
 #
 #use_hostname_for_mounts = "no"
 #
+# sss_master_map_wait - When sssd is starting up it can sometimes return
+# 			"no such entry" for a short time until it has read
+# 			in the LDAP map information. Internal default is 0
+# 			seconds, don't wait but if there is a problem with
+# 			autofs not finding the master map at startup (when
+# 			it should) then try setting this to 10 to work
+# 			around it.
+#
+#sss_master_map_wait = 0
+#
 # Otions for the amd parser within autofs.
 #
 # amd configuration options that are aren't used, haven't been
--- autofs-5.0.5.orig/samples/autofs.conf.default.in
+++ autofs-5.0.5/samples/autofs.conf.default.in
@@ -157,6 +157,16 @@ browse_mode = no
 #
 #use_hostname_for_mounts = "no"
 #
+# sss_master_map_wait - When sssd is starting up it can sometimes return
+#			"no such entry" for a short time until it has read
+# 			in the LDAP map information. Internal default is 0
+# 			seconds, don't wait but if there is a problem with
+# 			autofs not finding the master map at startup (when
+# 			it should) then try setting this to 10 to work
+# 			around it.
+#
+#sss_master_map_wait = 0
+#
 # Otions for the amd parser within autofs.
 #
 # amd configuration options that are aren't used, haven't been
