autofs-5.1.4 - fix NFS version mask usage

From: Ian Kent <raven@themaw.net>

Upstream commit a8af65195 changed NFS_VERS_MASK to exclude NFSv2
so NFSv2 would be excluded in the default availability probe.

But NFS_VERS_MASK is used like a mask elsewhere and causes NFSv2
to be cleared for the availability probe even when it is requested.

So add a macro to NFS_VERS_DEFAULT (and accompanying macros) to be
used to set initial defaults and restore NFS_VERS_MASK to what it
should be when used as a mask.

Signed-off-by: Ian Kent <raven@themaw.net>
---
 include/replicated.h |    5 ++++-
 modules/mount_nfs.c  |    6 +++---
 2 files changed, 7 insertions(+), 4 deletions(-)

--- autofs-5.0.5.orig/include/replicated.h
+++ autofs-5.0.5/include/replicated.h
@@ -26,7 +26,9 @@
 #define NFS2_SUPPORTED		0x0010
 #define NFS3_SUPPORTED		0x0020
 #define NFS4_SUPPORTED		0x0040
-#define NFS_VERS_MASK		(NFS3_SUPPORTED)
+#define NFS_VERS_DEFAULT	(NFS3_SUPPORTED)
+#define NFS_VERS_MASK		(NFS2_SUPPORTED|NFS3_SUPPORTED)
+#define NFS4_VERS_DEFAULT	(NFS4_SUPPORTED)
 #define NFS4_VERS_MASK		(NFS4_SUPPORTED)
 
 #define NFS2_REQUESTED		NFS2_SUPPORTED
@@ -37,6 +39,7 @@
 #define UDP_SUPPORTED		0x0002
 #define TCP_REQUESTED		TCP_SUPPORTED
 #define UDP_REQUESTED		UDP_SUPPORTED
+#define NFS_PROTO_DEFAULT	(TCP_SUPPORTED|UDP_SUPPORTED)
 #define NFS_PROTO_MASK		(TCP_SUPPORTED|UDP_SUPPORTED)
 
 #define NFS2_TCP_SUPPORTED	NFS2_SUPPORTED
--- autofs-5.0.5.orig/modules/mount_nfs.c
+++ autofs-5.0.5/modules/mount_nfs.c
@@ -86,11 +86,11 @@ int mount_mount(struct autofs_point *ap,
 	      root, name, what, fstype, options);
 
 	mount_default_proto = defaults_get_mount_nfs_default_proto();
-	vers = NFS_VERS_MASK | NFS_PROTO_MASK;
+	vers = NFS_VERS_DEFAULT | NFS_PROTO_DEFAULT;
 	if (strcmp(fstype, "nfs4") == 0)
-		vers = NFS4_VERS_MASK | TCP_SUPPORTED;
+		vers = NFS4_VERS_DEFAULT | TCP_SUPPORTED;
 	else if (mount_default_proto == 4)
-		vers = vers | NFS4_VERS_MASK;
+		vers = vers | NFS4_VERS_DEFAULT;
 
 	/* Extract "nosymlink" pseudo-option which stops local filesystems
 	 * from being symlinked.
