autofs-5.0.9 - amd lookup add amd config descriptions to config

From: Ian Kent <raven@themaw.net>

Add amd configuration option descriptions to the default installed
configuration file.

Including details about amd options that aren't used, haven't been
implemented or have different behaviour within autofs.
---
 redhat/autofs.conf.default.in  |  214 ++++++++++++++++++++++++++++++++++++++++
 samples/autofs.conf.default.in |  214 ++++++++++++++++++++++++++++++++++++++++
 2 files changed, 428 insertions(+)

diff --git a/redhat/autofs.conf.default.in b/redhat/autofs.conf.default.in
index c1362c7..ccccaab 100644
--- a/redhat/autofs.conf.default.in
+++ b/redhat/autofs.conf.default.in
@@ -129,3 +129,217 @@ mount_nfs_default_protocol = 4
 #
 #map_hash_table_size = 1024
 #
+#
+# Otions for the amd parser within autofs.
+#
+# amd configuration options that are aren't used, haven't been
+# implemented or have different behaviour within autofs.
+#
+# A number of the amd configuration options are not used by autofs,
+# some because they are not relevant within autofs, some because
+# they are done differently in autofs and others that are not yet
+# implemented.
+#
+# Since "mount_type" is always autofs (because there's no user space
+# NFS server) the configuration entries relating to that aren't used.
+# Also, server availability is done differently within autofs so the
+# options that relate to the amd server monitoring sub-system are
+# also not used.
+#
+# These options are mount_type, auto_attrcache, portmap_program,
+# nfs_vers_ping, nfs_allow_any_interface, nfs_allow_insecure_port,
+# nfs_proto, nfs_retransmit_counter, nfs_retransmit_counter_udp,
+# nfs_retransmit_counter_tcp, nfs_retransmit_counter_toplvl,
+# nfs_retry_interval, nfs_retry_interval_udp, nfs_retry_interval_tcp,
+# nfs_retry_interval_toplvl and nfs_vers.
+#
+#
+# Other options that are not used within the autofs implementation:
+#
+# log_file, truncate_log - autofs used either stderr when running in
+#	the foreground or sends its output to syslog so an alternate
+#	log file (or truncating the log) can't be used.
+#
+# print_pid - there's no corresponding option for this within autofs.
+#
+# use_tcpwrappers, show_statfs_entries - there's no user space NFS
+#	server to control access to so this option isn't relevant.
+#	The show_statfs_entries can't be implemented for the same
+#	reason.
+#
+# debug_mtab_file - there's no user space NFS server and autofs
+#	avoids using file based mtab whenever possible.
+#
+# sun_map_syntax - obviously, are provided by autofs itself.
+#
+# plock, show_statfs_entries, preferred_amq_port - not supported.
+#
+# ldap_cache_maxmem, ldap_cache_seconds - external ldap caching
+#	is not used by autofs.
+#
+# ldap_proto_version - autofs always attempts to use the highest
+#	available ldap protocol version.
+#
+# cache_duration, map_reload_interval, map_options - the map
+#	entry cache is continually updated and stale entries
+#	cleaned on re-load, which is done when map changes are
+#	detected so these configuration entries are not used
+#	by autofs.
+#
+# localhost_address - is not used within autofs. This
+#	configuration option was only used in the amd user
+#	space server code and is not relevant within autofs.
+#
+#
+# Options that are handled differently within autofs:
+#
+# pid_file - must be given as a command line option on startup.
+#
+# print_version - program version and feature information is obtained
+#	by using the automount command line option "-V".
+#
+# debug_options, log_options - autofs has somewhat more limited
+#	logging and debug logging options. When the log_options
+#	options is encountered it is converted to the nearest
+#	matching autofs logging option. Since the configuration
+#	option debug_options would be handled the same way it
+#	is ignored.
+#
+# restart_mounts - has no sensible meaning within autofs because autofs
+#	always tries to re-connect to existing mounts. While this
+#	has its own set of problems not re-connecting to existing
+#	mounts always results in a non-functional automount tree if
+#	mounts were busy at the last shutdown (as is also the case
+#	with amd when using mount_type autofs).
+#
+# forced_unmounts - detaching mounts often causes serious problems
+#	for users of existing mounts. It is used by autofs in some
+#	cases, either at the explicit request of the user (with a
+#	command line or init option) and in some special cases during
+#	program operation but is avoided whenever possible.
+#
+#
+# A number of configuration options are not yet implemented:
+#
+# search_path - always a little frustrating, the compiled in
+#	map location should be used to locate maps but isn't
+#	in some cases. This requires work within autofs itself
+#	and that will (obviously) include implementing this
+#	configuration option for the amd map parser as well.
+#
+# fully_qualified_hosts - not yet implemented.
+#
+# unmount_on_exit - since autofs always tries to re-connect
+#	to mounts left mounted from a previous shutdown this
+#	is a sensible option to implement and that will be
+#	done.
+#
+# browsable_dirs - not yet implemented.
+#
+# exec_map_timeout - a timeout is not currently used for
+#	for program maps, might be implemented.
+#
+# tag - the tag option is not implemented within autofs.
+#
+#
+# Supported options:
+#
+# arch, karch, os, osver - these options default to what is returned
+#	from uname(2) and can be overridden if required.
+#
+# full_os - has no default and must be set in the configuration
+#	if used in maps.
+#
+# cluster - if not set defaults to the host domain name. This option
+#	corresponds to the HP_UX cluster name (according to the amd
+#	source) and is probably not used in Linux but is set anyway.
+#
+# vendor - has a default value of "unknown", it must be set in the
+#	configuration if used in maps.
+#
+# auto_dir - is the base name of the mount tree used for external
+#	mounts that are sometimes needed by amd maps. Its default
+#	value is "/a".
+#
+# map_type - specifies the autofs map source, such as file, nis,
+#	ldap etc. and has no default value set.
+#
+# map_defaults - is used to override /defaults entries within maps
+#	and can be used to provide different defaults on specific
+#	machines without having to modify centrally managed maps.
+#	It is empty by default.
+#
+# dismount_interval - is equivalent to the autofs timeout option. It
+#	is only possible to use this with type "auto" mounts due
+#	to the way the autofs kernel module performs expiry. It
+#	takes its default value from the autofs internal default
+#	of 600 seconds.
+#
+# autofs_use_lofs - if set to "yes" autofs will attempt to use bind
+#	mounts for type "auto" when possible.
+#
+# nis_domain - allows setting of a domain name other than the system
+#	default.
+#
+# local_domain - is used to override (or set) the host domain name.
+#
+# normalize_hostnames - if set to "yes" then the contents of ${rhost}
+#	is translated in its official host name.
+#
+# domain_strip - if set to "yes" the domain name part of the host
+# 	is strippped when normalizing hostnames. This can be useful
+#	when using of the same maps in a multiple domain environment.
+#
+# normalize_slashes - is set to "yes" by default and will collapse
+#	multiple unescaped occurrences of "/" to a single "/".
+#
+# selectors_in_defaults, selectors_on_default - has a default value
+#	of "no". If set to "yes" then any defaults entry will be
+#	checked for selectors to determine the values to be used.
+#	selectors_in_defaults is the preferred option to use.
+#
+# ldap_base - has no default value. It must be set to the base dn
+#	that is used for queries if ldap is to be used as a map
+#	source.
+#
+# ldap_hostports - has no default value set. It must be set to
+#	the URI of the LDAP server to be used for lookups when
+#	ldap is used a map source. It may contain a comma or
+#	space seperated list of LDAP URIs.
+#
+# hesiod_base - the base name used for hesiod map sources.
+#
+# Define global options for the amd parser within autofs.
+#
+[ amd ]
+#
+# Override the internal default with the same timeout that
+# is used by the override in the autofs configuration, sanity
+# only change.
+#
+dismount_interval = 300
+#
+# map_type = file
+#
+# Overriding this can cause autofs to use less resources because
+# it will use symlinks instead of bind mounts in certain cases.
+# You should ensure that the autofs kernel module your using
+# supports expration of symlinks for best results (although this
+# appears to work reasonably well most of the time without the
+# update).
+#
+# autofs_use_lofs = no
+#
+# Several configuration options can be set per mount point.
+# In particulr map_type, map_name, map_defaults, search_path,
+# browsable_dirs, dismount_interval and selectors_in_defaults
+# (not all of which are currently implemented, see above).
+#
+# Also, if a section for an amd mount point is defined here
+# it isn't necessary to specify the format in the corresponding
+# master map entry and the format will be inherited for type
+# "auto" mounts.
+#
+# [ /expamle/mount ]
+# dismount_interval = 60
+# map_type = nis
diff --git a/samples/autofs.conf.default.in b/samples/autofs.conf.default.in
index c8e4006..616bc66 100644
--- a/samples/autofs.conf.default.in
+++ b/samples/autofs.conf.default.in
@@ -128,3 +128,217 @@ browse_mode = no
 #
 #map_hash_table_size = 1024
 #
+#
+# Otions for the amd parser within autofs.
+#
+# amd configuration options that are aren't used, haven't been
+# implemented or have different behaviour within autofs.
+#
+# A number of the amd configuration options are not used by autofs,
+# some because they are not relevant within autofs, some because
+# they are done differently in autofs and others that are not yet
+# implemented.
+#
+# Since "mount_type" is always autofs (because there's no user space
+# NFS server) the configuration entries relating to that aren't used.
+# Also, server availability is done differently within autofs so the
+# options that relate to the amd server monitoring sub-system are
+# also not used.
+#
+# These options are mount_type, auto_attrcache, portmap_program,
+# nfs_vers_ping, nfs_allow_any_interface, nfs_allow_insecure_port,
+# nfs_proto, nfs_retransmit_counter, nfs_retransmit_counter_udp,
+# nfs_retransmit_counter_tcp, nfs_retransmit_counter_toplvl,
+# nfs_retry_interval, nfs_retry_interval_udp, nfs_retry_interval_tcp,
+# nfs_retry_interval_toplvl and nfs_vers.
+#
+#
+# Other options that are not used within the autofs implementation:
+#
+# log_file, truncate_log - autofs used either stderr when running in
+#	the foreground or sends its output to syslog so an alternate
+#	log file (or truncating the log) can't be used.
+#
+# print_pid - there's no corresponding option for this within autofs.
+#
+# use_tcpwrappers, show_statfs_entries - there's no user space NFS
+#	server to control access to so this option isn't relevant.
+#	The show_statfs_entries can't be implemented for the same
+#	reason.
+#
+# debug_mtab_file - there's no user space NFS server and autofs
+#	avoids using file based mtab whenever possible.
+#
+# sun_map_syntax - obviously, are provided by autofs itself.
+#
+# plock, show_statfs_entries, preferred_amq_port - not supported.
+#
+# ldap_cache_maxmem, ldap_cache_seconds - external ldap caching
+#	is not used by autofs.
+#
+# ldap_proto_version - autofs always attempts to use the highest
+#	available ldap protocol version.
+#
+# cache_duration, map_reload_interval, map_options - the map
+#	entry cache is continually updated and stale entries
+#	cleaned on re-load, which is done when map changes are
+#	detected so these configuration entries are not used
+#	by autofs.
+#
+# localhost_address - is not used within autofs. This
+#	configuration option was only used in the amd user
+#	space server code and is not relevant within autofs.
+#
+#
+# Options that are handled differently within autofs:
+#
+# pid_file - must be given as a command line option on startup.
+#
+# print_version - program version and feature information is obtained
+#	by using the automount command line option "-V".
+#
+# debug_options, log_options - autofs has somewhat more limited
+#	logging and debug logging options. When the log_options
+#	options is encountered it is converted to the nearest
+#	matching autofs logging option. Since the configuration
+#	option debug_options would be handled the same way it
+#	is ignored.
+#
+# restart_mounts - has no sensible meaning within autofs because autofs
+#	always tries to re-connect to existing mounts. While this
+#	has its own set of problems not re-connecting to existing
+#	mounts always results in a non-functional automount tree if
+#	mounts were busy at the last shutdown (as is also the case
+#	with amd when using mount_type autofs).
+#
+# forced_unmounts - detaching mounts often causes serious problems
+#	for users of existing mounts. It is used by autofs in some
+#	cases, either at the explicit request of the user (with a
+#	command line or init option) and in some special cases during
+#	program operation but is avoided whenever possible.
+#
+#
+# A number of configuration options are not yet implemented:
+#
+# search_path - always a little frustrating, the compiled in
+#	map location should be used to locate maps but isn't
+#	in some cases. This requires work within autofs itself
+#	and that will (obviously) include implementing this
+#	configuration option for the amd map parser as well.
+#
+# fully_qualified_hosts - not yet implemented.
+#
+# unmount_on_exit - since autofs always tries to re-connect
+#	to mounts left mounted from a previous shutdown this
+#	is a sensible option to implement and that will be
+#	done.
+#
+# browsable_dirs - not yet implemented.
+#
+# exec_map_timeout - a timeout is not currently used for
+#	for program maps, might be implemented.
+#
+# tag - the tag option is not implemented within autofs.
+#
+#
+# Supported options:
+#
+# arch, karch, os, osver - these options default to what is returned
+#	from uname(2) and can be overridden if required.
+#
+# full_os - has no default and must be set in the configuration
+#	if used in maps.
+#
+# cluster - if not set defaults to the host domain name. This option
+#	corresponds to the HP_UX cluster name (according to the amd
+#	source) and is probably not used in Linux but is set anyway.
+#
+# vendor - has a default value of "unknown", it must be set in the
+#	configuration if used in maps.
+#
+# auto_dir - is the base name of the mount tree used for external
+#	mounts that are sometimes needed by amd maps. Its default
+#	value is "/a".
+#
+# map_type - specifies the autofs map source, such as file, nis,
+#	ldap etc. and has no default value set.
+#
+# map_defaults - is used to override /defaults entries within maps
+#	and can be used to provide different defaults on specific
+#	machines without having to modify centrally managed maps.
+#	It is empty by default.
+#
+# dismount_interval - is equivalent to the autofs timeout option. It
+#	is only possible to use this with type "auto" mounts due
+#	to the way the autofs kernel module performs expiry. It
+#	takes its default value from the autofs internal default
+#	of 600 seconds.
+#
+# autofs_use_lofs - if set to "yes" autofs will attempt to use bind
+#	mounts for type "auto" when possible.
+#
+# nis_domain - allows setting of a domain name other than the system
+#	default.
+#
+# local_domain - is used to override (or set) the host domain name.
+#
+# normalize_hostnames - if set to "yes" then the contents of ${rhost}
+#	is translated in its official host name.
+#
+# domain_strip - if set to "yes" the domain name part of the host
+# 	is strippped when normalizing hostnames. This can be useful
+#	when using of the same maps in a multiple domain environment.
+#
+# normalize_slashes - is set to "yes" by default and will collapse
+#	multiple unescaped occurrences of "/" to a single "/".
+#
+# selectors_in_defaults, selectors_on_default - has a default value
+#	of "no". If set to "yes" then any defaults entry will be
+#	checked for selectors to determine the values to be used.
+#	selectors_in_defaults is the preferred option to use.
+#
+# ldap_base - has no default value. It must be set to the base dn
+#	that is used for queries if ldap is to be used as a map
+#	source.
+#
+# ldap_hostports - has no default value set. It must be set to
+#	the URI of the LDAP server to be used for lookups when
+#	ldap is used a map source. It may contain a comma or
+#	space seperated list of LDAP URIs.
+#
+# hesiod_base - the base name used for hesiod map sources.
+#
+# Define global options for the amd parser within autofs.
+#
+[ amd ]
+#
+# Override the internal default with the same timeout that
+# is used by the override in the autofs configuration, sanity
+# only change.
+#
+dismount_interval = 300
+#
+# map_type = file
+#
+# Overriding this can cause autofs to use less resources because
+# it will use symlinks instead of bind mounts in certain cases.
+# You should ensure that the autofs kernel module your using
+# supports expration of symlinks for best results (although this
+# appears to work reasonably well most of the time without the
+# update).
+#
+# autofs_use_lofs = no
+#
+# Several configuration options can be set per mount point.
+# In particulr map_type, map_name, map_defaults, search_path,
+# browsable_dirs, dismount_interval and selectors_in_defaults
+# (not all of which are currently implemented, see above).
+#
+# Also, if a section for an amd mount point is defined here
+# it isn't necessary to specify the format in the corresponding
+# master map entry and the format will be inherited for type
+# "auto" mounts.
+#
+# [ /expamle/mount ]
+# dismount_interval = 60
+# map_type = nis
